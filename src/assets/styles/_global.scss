// Global style and imports go here

@import '_vars.scss';
@import '_utility.scss';
@import '_typography.scss';
@import '_fonts.scss';
@import '_components.scss';
@import '_inputs.scss';
@import '_tables.scss';
@import '_modal.scss';

* {
  margin: 0;
  padding: 0;
  outline: 0;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
html {
  height: 100%;
}

body {
  min-height: 100%;
  height: 100%;
  color: $color-main;
  font-size: $font-size-main;
  line-height: 100%;
  font-family: $font-main;
  font-weight: $font-weight-normal;
  background: $color-background;
  -webkit-font-smoothing: antialiased;
  -webkit-backface-visibility: hidden;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  backface-visibility: hidden;
  -webkit-overflow-scrolling: touch;
}

::selection {
  background: rgba(0,0,0,0.7);
  color: #fff;
}

.left {
  float: left;
}

.right {
  float: right;
}

.full-width {
  width: 100%;
  display: block;
}

.inline {
  display: inline-block;
}

.VueTables.VueTables--client {
  .VueTables__search {
    padding: 1rem;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }

  .VuePagination {
    margin: 2rem 0;

    > nav:first-child {
      display: flex;
    }

    .VuePagination__count {
      flex: 1;
    }

    .VuePagination__pagination {
      display: flex;
      order: 2;

      > li {
        margin: 0 0.5rem;
      }
    }
  }

  .table-responsive {
    > .VueTables__table {
      width: 100%;
    }
  }

  > .VuePagination {
    overflow: hidden;
    clear: both;
  }
}

#app {
  width: 100%;
  height: 100%;
}

.container {
  margin: $pad;
  background: $white;
  border: 1px solid $color-border;
  border-radius: 4px;
  overflow: hidden;
}
.pad {
  padding: $pad;
}
.content-bottom {
  padding: $pad;
  background: $color-white;
  border-top: 1px solid $color-border;
}

$container-sizes: (20, 25, 50, 75, 80, 100);
@each $size in $container-sizes {
  .container-#{$size}p {
    width: percentage($size/100);
  }
}

$container-sizes-fixed: (600, 800, 1000);
@each $size in $container-sizes-fixed {
  .container-#{$size} {
    max-width: #{$size}px;
  }
}